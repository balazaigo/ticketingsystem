<?php


namespace Zaigo\TicketingSystem;


use Zaigo\TicketingSystem\Commands\ZaigoTicketPublishResources;
use Illuminate\Support\ServiceProvider;
use Zaigo\TicketingSystem\Models\ZaigoTicket;
use Zaigo\TicketingSystem\Observers\ZaigoTicketObserver;

class ZaigoTicketingSystemServiceProvider extends ServiceProvider
{
    public function register()
    {
        $this->mergeConfigFrom(__DIR__ . '/config/zaigoticket.php', 'zaigoticket');
        parent::register(); // TODO: Change the autogenerated stub
    }

    public function boot()
    {
        ZaigoTicket::observe(ZaigoTicketObserver::class);
        $this->loadMigrationsFrom(__DIR__ . '/database/migrations');
        if ($this->app->runningInConsole()) {
            $this->commands([
                ZaigoTicketPublishResources::class,
            ]);
            $this->publishZaigoTicketingResources();
        }
    }

    private function publishZaigoTicketingResources()
    {
        $root = __DIR__.'';
        $prefix = 'zaigo-ticketing-';
        $resources = [
            $prefix.'config' => [
                "{$root}/config/zaigoticket.php" => config_path('zaigoticket.php')
            ],
            $prefix.'migrations' => $this->generateMigrationsFromStubs(),
            $prefix.'models' => $this->generateModels(),
            $prefix.'observers' => $this->generateObservers(),
            $prefix.'traits' => [
                "{$root}/traits/ZaigoTicketableTrait.php" => app_path('Traits/ZaigoTicketableTrait.php')
            ],
        ];
        foreach($resources as $group => $paths){
            $this->publishes($paths, $group);
        }
    }

    private function generateMigrationsFromStubs(){
        $root = __DIR__.'';
        $migrationFiles = [];
        foreach(glob("{$root}/database/migrations/*.stub") as $stub){
            $migrationFiles["{$stub}"] = database_path('migrations/'.date('Y_m_d_His', time()).'_'.str_replace("{$root}/database/migrations/",'',str_replace('.stub','',$stub)));
        }
        return $migrationFiles;
    }

    private function generateModels(){
        $root = __DIR__.'';
        $models = [];
        $frameWorkVersion = (int)app()->version();
        $directory = '';
        if($frameWorkVersion >= 8) $directory = '/Models/';
        foreach(glob("{$root}/Models/*.php") as $model){
            $models["{$model}"] = app_path($directory.str_replace("{$root}/Models/",'',$model));
        }
        return $models;
    }

    private function generateObservers(){
        $root = __DIR__.'';
        $observers = [];
        $directory = '/Observers/';
        foreach(glob("{$root}{$directory}*.php") as $observer){
            $observers["{$observer}"] = app_path($directory.str_replace("{$root}/Observers/",'',$observer));
        }
        return $observers;
    }
}
